---
Description: This CloudFormation Template Deploys Reference Architecture of a Multi-tenant
  Identity Platform featuring Amazon Cognito. It will deploy a VPC, Security Groups,
  ECS Cluster, 7 ECS Task Definitions & Services, Application Load Balancer, API Gateway,
  S3 Buckets, CodePipeline, CodeBuild Projects. It will perform a Health Check with
  a Custom Resource, and deploy an initial provisioning of a System Admin User for
  the Identity Platform. You will be billed for the AWS resources used if you create
  a stack from this template. (qs-1nlegmi3i)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
      - VPCID
      - PrivateSubnet1ID
      - PrivateSubnet2ID
      - PublicSubnet1ID
      - PublicSubnet2ID
    - Label:
        default: AWS Quick Start Configuration
      Parameters:
      - QSS3BucketName
      - QSS3KeyPrefix
    - Label:
        default: SaaS Identity Quick Start Configuration
      Parameters:
      - KeyPairName
    - Label:
        default: SaaS Identity Sys Admin Configuration
      Parameters:
      - Email
      - Company
      - Firstname
      - Lastname
    - Label:
        default: SaaS Identity DynamoDB Table Configuration
      Parameters:
      - UserTable
      - TenantTable
      - ProductTable
      - OrderTable
    - Label:
        default: New Relic License Configuration
      Parameters:
      - NewRelicLicenseKey
      - NewRelicRumBeacon
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      KeyPairName:
        default: Key Pair Name
      PrivateSubnet1ID:
        default: Private Subnet 1 ID
      PrivateSubnet2ID:
        default: Private Subnet 2 ID
      PublicSubnet1ID:
        default: Public Subnet 1 ID
      PublicSubnet2ID:
        default: Public Subnet 2 ID
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      VPCID:
        default: VPC ID
      Email:
        default: Email Address
      Company:
        default: Company Name
      Firstname:
        default: First Name
      Lastname:
        default: Last Name
      UserTable:
        default: User
      TenantTable:
        default: Tenant
      ProductTable:
        default: Product
      OrderTable:
        default: Order
      NewRelicLicenseKey:
        default: New Relic License
      NewRelicRumBeacon:
        default: New Relic JavaScript Agent (RUM) Beacon
Parameters:
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Public/private key pairs allow you to securely connect to your instance
      after it launches
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the VPC.
  PublicSubnet1ID:
    Type: AWS::EC2::Subnet::Id
    Description: ID for the public DMZ subnet 1 located in Availability Zone 1
  PublicSubnet2ID:
    Type: AWS::EC2::Subnet::Id
    Description: ID for the public DMZ subnet 2 located in Availability Zone 2
  PrivateSubnet1ID:
    Type: AWS::EC2::Subnet::Id
    Description: ID for private subnet 1 located in Availability Zone 1.
  PrivateSubnet2ID:
    Type: AWS::EC2::Subnet::Id
    Description: ID for private subnet 2 located in Availability Zone 2.
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: saas-identity-cognito-newrelic
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and a forward slash (/) at the end of the prefix.
    Default: 1/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  Company:
    Type: String
    Default: MyCompanyName
    Description: The Name of the Company that will manage the Reference Architecture.
  Email:
    Type: String
    Description: The Email Address of the Sys Admin.
    Default: email@example.com
  Firstname:
    Type: String
    Description: The First Name of the Sys Admin.
    Default: MyFirstName
  Lastname:
    Type: String
    Description: The Last Name of the Sys Admin.
    Default: MyLastName
  UserTable:
    Type: String
    Description: The DynamoDB Table for Users of the Multi-Tenant System
    Default: User
  TenantTable:
    Type: String
    Description: The DynamoDB Table for Tenants of the Multi-Tenant System
    Default: Tenant
  ProductTable:
    Type: String
    Description: The DynamoDB Table for Products of the Multi-Tenant System
    Default: Product
  OrderTable:
    Type: String
    Description: The DynamoDB Table for Orders of the Multi-Tenant System
    Default: Order
  NewRelicLicenseKey:
      Description: The New Relic License Key for New Relic Account.
      Type: String
      Default: NEW_RELIC_LICENSE_KEY
  NewRelicRumBeacon:
    Description: New Relic JavaScript Agent URL for RUM
    Type: String
    Default: '{beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",licenseKey:"1234",applicationID:"5678",sa:1}'
Rules:
  KeyPairsNotEmpty:
    Assertions:
    - Assert:
        !Not
        - Fn::EachMemberEquals:
          - Fn::RefAll: AWS::EC2::KeyPair::KeyName
          - ''
      AssertDescription: All key pair parameters must not be empty
  SubnetsInVPC:
    Assertions:
    - Assert:
        Fn::EachMemberIn:
        - Fn::ValueOfAll:
          - AWS::EC2::Subnet::Id
          - VpcId
        - Fn::RefAll: AWS::EC2::VPC::Id
      AssertDescription: All subnets must be in the VPC
Resources:
  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/security-groups.template
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !Ref VPCID
  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/load-balancers.template
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !Ref VPCID
        Subnets:
          !Join
          - ','
          - - !Ref PublicSubnet1ID
            - !Ref PublicSubnet2ID
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup
  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/ecs-cluster.template
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: t2.large
        ClusterSize: 4
        VPC: !Ref VPCID
        KeyName: !Ref KeyPairName
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        NewRelicLicenseKey: !Ref NewRelicLicenseKey
        Subnets:
          !Join
          - ','
          - - !Ref PrivateSubnet1ID
            - !Ref PrivateSubnet2ID
  Role:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/roles.template
      Parameters:
        EnvironmentName: !Ref AWS::StackName
  ZipFiles:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/copy.template
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        RoleArn: !GetAtt Role.Outputs.CleanupRole
  API:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/api-gateway.template
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        LambdaInvocationRole: !GetAtt Role.Outputs.LambdaInvocationRole
        LambdaExecutionRole: !GetAtt Role.Outputs.LambdaExecutionRole
        ServiceUrl: !GetAtt ALB.Outputs.LoadBalancerUrl
        S3Bucket: !GetAtt ZipFiles.Outputs.AssetBucket
        S3BucketPrefix: !Ref QSS3KeyPrefix
  WebClient:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/web-deployment-pipeline.template
      Parameters:
        ServiceUrl: !GetAtt API.Outputs.RootUrl
        ServiceName: client
        TemplateBucket: !GetAtt ZipFiles.Outputs.AssetBucket
        TemplatePrefix: !Ref QSS3KeyPrefix
        NewRelicRumBeacon: !Ref NewRelicRumBeacon
  WebPerm:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/bucket-public-read.template
      Parameters:
        Bucket: !GetAtt WebClient.Outputs.WebBucket
  BucketRepository:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/docker-bucket-repository.template
  DynamoDBTables:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/dynamodb-tables.template
      Parameters:
        UserTableName: !Ref UserTable
        TenantTableName: !Ref TenantTable
        ProductTableName: !Ref ProductTable
        OrderTableName: !Ref OrderTable
  WaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  UserService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/deployment-pipeline-test.template
      Parameters:
        VPC: !Ref VPCID
        Cluster: !GetAtt ECS.Outputs.Cluster
        ServiceUrl: !GetAtt API.Outputs.RootUrl
        SnsRole: !GetAtt Role.Outputs.SNSRoleArn
        UserTable: !GetAtt DynamoDBTables.Outputs.UserTable
        TenantTable: !GetAtt DynamoDBTables.Outputs.TenantTable
        ProductTable: !GetAtt DynamoDBTables.Outputs.ProductTable
        OrderTable: !GetAtt DynamoDBTables.Outputs.OrderTable
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /user*
        HealthCheck: /user/health
        ServiceName: user-manager
        Priority: 2
        ContainerPort: 3001
        TemplateBucket: !GetAtt ZipFiles.Outputs.AssetBucket
        TemplatePrefix: !Ref QSS3KeyPrefix
        WaitURL: !Ref WaitHandle
        CloudFormationExecutionRole: !GetAtt Role.Outputs.CloudFormationExecutionRole
        ArtifactBucket: !GetAtt BucketRepository.Outputs.ArtifactBucket
        Repository: !GetAtt BucketRepository.Outputs.Repository
        NewRelicLicenseKey: !Ref NewRelicLicenseKey
  AuthService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/deployment-pipeline-test.template
      Parameters:
        VPC: !Ref VPCID
        Cluster: !GetAtt ECS.Outputs.Cluster
        ServiceUrl: !GetAtt API.Outputs.RootUrl
        SnsRole: !GetAtt Role.Outputs.SNSRoleArn
        UserTable: !GetAtt DynamoDBTables.Outputs.UserTable
        TenantTable: !GetAtt DynamoDBTables.Outputs.TenantTable
        ProductTable: !GetAtt DynamoDBTables.Outputs.ProductTable
        OrderTable: !GetAtt DynamoDBTables.Outputs.OrderTable
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /auth*
        HealthCheck: /auth/health
        ServiceName: auth-manager
        Priority: 3
        ContainerPort: 3000
        TemplateBucket: !GetAtt ZipFiles.Outputs.AssetBucket
        TemplatePrefix: !Ref QSS3KeyPrefix
        WaitURL: !Ref WaitHandle
        CloudFormationExecutionRole: !GetAtt Role.Outputs.CloudFormationExecutionRole
        ArtifactBucket: !GetAtt BucketRepository.Outputs.ArtifactBucket
        Repository: !GetAtt BucketRepository.Outputs.Repository
        NewRelicLicenseKey: !Ref NewRelicLicenseKey
  TenantService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/deployment-pipeline-test.template
      Parameters:
        VPC: !Ref VPCID
        Cluster: !GetAtt ECS.Outputs.Cluster
        ServiceUrl: !GetAtt API.Outputs.RootUrl
        SnsRole: !GetAtt Role.Outputs.SNSRoleArn
        UserTable: !GetAtt DynamoDBTables.Outputs.UserTable
        TenantTable: !GetAtt DynamoDBTables.Outputs.TenantTable
        ProductTable: !GetAtt DynamoDBTables.Outputs.ProductTable
        OrderTable: !GetAtt DynamoDBTables.Outputs.OrderTable
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /tenant*
        HealthCheck: /tenant/health
        ServiceName: tenant-manager
        Priority: 4
        ContainerPort: 3003
        TemplateBucket: !GetAtt ZipFiles.Outputs.AssetBucket
        TemplatePrefix: !Ref QSS3KeyPrefix
        WaitURL: !Ref WaitHandle
        CloudFormationExecutionRole: !GetAtt Role.Outputs.CloudFormationExecutionRole
        ArtifactBucket: !GetAtt BucketRepository.Outputs.ArtifactBucket
        Repository: !GetAtt BucketRepository.Outputs.Repository
        NewRelicLicenseKey: !Ref NewRelicLicenseKey
  RegService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/deployment-pipeline-test.template
      Parameters:
        VPC: !Ref VPCID
        Cluster: !GetAtt ECS.Outputs.Cluster
        ServiceUrl: !GetAtt API.Outputs.RootUrl
        SnsRole: !GetAtt Role.Outputs.SNSRoleArn
        UserTable: !GetAtt DynamoDBTables.Outputs.UserTable
        TenantTable: !GetAtt DynamoDBTables.Outputs.TenantTable
        ProductTable: !GetAtt DynamoDBTables.Outputs.ProductTable
        OrderTable: !GetAtt DynamoDBTables.Outputs.OrderTable
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /reg*
        HealthCheck: /reg/health
        ServiceName: tenant-registration
        Priority: 5
        ContainerPort: 3004
        TemplateBucket: !GetAtt ZipFiles.Outputs.AssetBucket
        TemplatePrefix: !Ref QSS3KeyPrefix
        WaitURL: !Ref WaitHandle
        CloudFormationExecutionRole: !GetAtt Role.Outputs.CloudFormationExecutionRole
        ArtifactBucket: !GetAtt BucketRepository.Outputs.ArtifactBucket
        Repository: !GetAtt BucketRepository.Outputs.Repository
        NewRelicLicenseKey: !Ref NewRelicLicenseKey
  SysService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/deployment-pipeline-test.template
      Parameters:
        VPC: !Ref VPCID
        Cluster: !GetAtt ECS.Outputs.Cluster
        ServiceUrl: !GetAtt API.Outputs.RootUrl
        SnsRole: !GetAtt Role.Outputs.SNSRoleArn
        UserTable: !GetAtt DynamoDBTables.Outputs.UserTable
        TenantTable: !GetAtt DynamoDBTables.Outputs.TenantTable
        ProductTable: !GetAtt DynamoDBTables.Outputs.ProductTable
        OrderTable: !GetAtt DynamoDBTables.Outputs.OrderTable
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /sys*
        HealthCheck: /sys/health
        ServiceName: system-registration
        Priority: 6
        ContainerPort: 3011
        TemplateBucket: !GetAtt ZipFiles.Outputs.AssetBucket
        TemplatePrefix: !Ref QSS3KeyPrefix
        WaitURL: !Ref WaitHandle
        CloudFormationExecutionRole: !GetAtt Role.Outputs.CloudFormationExecutionRole
        ArtifactBucket: !GetAtt BucketRepository.Outputs.ArtifactBucket
        Repository: !GetAtt BucketRepository.Outputs.Repository
        NewRelicLicenseKey: !Ref NewRelicLicenseKey
  ProductService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/deployment-pipeline-test.template
      Parameters:
        VPC: !Ref VPCID
        Cluster: !GetAtt ECS.Outputs.Cluster
        ServiceUrl: !GetAtt API.Outputs.RootUrl
        SnsRole: !GetAtt Role.Outputs.SNSRoleArn
        UserTable: !GetAtt DynamoDBTables.Outputs.UserTable
        TenantTable: !GetAtt DynamoDBTables.Outputs.TenantTable
        ProductTable: !GetAtt DynamoDBTables.Outputs.ProductTable
        OrderTable: !GetAtt DynamoDBTables.Outputs.OrderTable
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /product*
        HealthCheck: /product/health
        ServiceName: product-manager
        Priority: 7
        ContainerPort: 3006
        TemplateBucket: !GetAtt ZipFiles.Outputs.AssetBucket
        TemplatePrefix: !Ref QSS3KeyPrefix
        WaitURL: !Ref WaitHandle
        CloudFormationExecutionRole: !GetAtt Role.Outputs.CloudFormationExecutionRole
        ArtifactBucket: !GetAtt BucketRepository.Outputs.ArtifactBucket
        Repository: !GetAtt BucketRepository.Outputs.Repository
        NewRelicLicenseKey: !Ref NewRelicLicenseKey
  OrderService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/deployment-pipeline-test.template
      Parameters:
        VPC: !Ref VPCID
        Cluster: !GetAtt ECS.Outputs.Cluster
        ServiceUrl: !GetAtt API.Outputs.RootUrl
        SnsRole: !GetAtt Role.Outputs.SNSRoleArn
        UserTable: !GetAtt DynamoDBTables.Outputs.UserTable
        TenantTable: !GetAtt DynamoDBTables.Outputs.TenantTable
        ProductTable: !GetAtt DynamoDBTables.Outputs.ProductTable
        OrderTable: !GetAtt DynamoDBTables.Outputs.OrderTable
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /order*
        HealthCheck: /order/health
        ServiceName: order-manager
        Priority: 8
        ContainerPort: 3015
        TemplateBucket: !GetAtt ZipFiles.Outputs.AssetBucket
        TemplatePrefix: !Ref QSS3KeyPrefix
        WaitURL: !Ref WaitHandle
        CloudFormationExecutionRole: !GetAtt Role.Outputs.CloudFormationExecutionRole
        ArtifactBucket: !GetAtt BucketRepository.Outputs.ArtifactBucket
        Repository: !GetAtt BucketRepository.Outputs.Repository
        NewRelicLicenseKey: !Ref NewRelicLicenseKey
  WaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn:
    - UserService
    - AuthService
    - TenantService
    - RegService
    - SysService
    - ProductService
    - OrderService
    Properties:
      Handle:
        Ref: WaitHandle
      Timeout: '3600'
      Count: '7'
  UserServiceCleanup:
    Type: AWS::CloudFormation::Stack
    DependsOn: Role
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/clean-cfnstack.template
      Parameters:
        ServiceToken: !GetAtt Role.Outputs.CleanupRole
        Stack: !GetAtt UserService.Outputs.ServiceStack
  AuthServiceCleanup:
    Type: AWS::CloudFormation::Stack
    DependsOn: Role
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/clean-cfnstack.template
      Parameters:
        ServiceToken: !GetAtt Role.Outputs.CleanupRole
        Stack: !GetAtt AuthService.Outputs.ServiceStack
  TenantServiceCleanup:
    DependsOn: Role
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/clean-cfnstack.template
      Parameters:
        ServiceToken: !GetAtt Role.Outputs.CleanupRole
        Stack: !GetAtt TenantService.Outputs.ServiceStack
  RegServiceCleanup:
    Type: AWS::CloudFormation::Stack
    DependsOn: Role
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/clean-cfnstack.template
      Parameters:
        ServiceToken: !GetAtt Role.Outputs.CleanupRole
        Stack: !GetAtt RegService.Outputs.ServiceStack
  SysServiceCleanup:
    Type: AWS::CloudFormation::Stack
    DependsOn: Role
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/clean-cfnstack.template
      Parameters:
        ServiceToken: !GetAtt Role.Outputs.CleanupRole
        Stack: !GetAtt SysService.Outputs.ServiceStack
  ProductServiceCleanup:
    Type: AWS::CloudFormation::Stack
    DependsOn: Role
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/clean-cfnstack.template
      Parameters:
        ServiceToken: !GetAtt Role.Outputs.CleanupRole
        Stack: !GetAtt ProductService.Outputs.ServiceStack
  OrderServiceCleanup:
    Type: AWS::CloudFormation::Stack
    DependsOn: Role
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/clean-cfnstack.template
      Parameters:
        ServiceToken: !GetAtt Role.Outputs.CleanupRole
        Stack: !GetAtt OrderService.Outputs.ServiceStack
  BucketRepositoryCleanup:
    Type: AWS::CloudFormation::Stack
    DependsOn: Role
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/cleanup-bucket-repository.template
      Parameters:
        Bucket: !GetAtt BucketRepository.Outputs.ArtifactBucket
        Repository: !GetAtt BucketRepository.Outputs.Repository
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        RoleArn: !GetAtt Role.Outputs.CleanupRole
  WebClientCleanup:
    Type: AWS::CloudFormation::Stack
    DependsOn: Role
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/clean-bucket.template
      Parameters:
        Bucket: !GetAtt WebClient.Outputs.WebBucket
        ServiceToken: !GetAtt Role.Outputs.CleanupRole
  WebArtifactCleanup:
    Type: AWS::CloudFormation::Stack
    DependsOn: Role
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/clean-bucket.template
      Parameters:
        Bucket: !GetAtt WebClient.Outputs.ArtifactBucket
        ServiceToken: !GetAtt Role.Outputs.CleanupRole
  ZipFilesCleanup:
    Type: AWS::CloudFormation::Stack
    DependsOn: Role
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/clean-bucket.template
      Parameters:
        Bucket: !GetAtt ZipFiles.Outputs.AssetBucket
        ServiceToken: !GetAtt Role.Outputs.CleanupRole
  SysAdmin:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - WaitCondition
    - UserService
    - AuthService
    - TenantService
    - RegService
    - SysService
    - ProductService
    - OrderService
    - SysAdminCleanup
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/rest-request-create.template
      Parameters:
        Domain: !GetAtt API.Outputs.RootUrl
        Protocol: https://
        Body:
          Fn::Sub: '{"companyName":"${Company}","accountName":"${Company}","ownerName":"${Email}","email":"${Email}","userName":"${Email}","firstName":"${Firstname}","lastName":"${Lastname}"}'
        Path: /sys/admin
        Method: POST
        S3Bucket: !GetAtt ZipFiles.Outputs.AssetBucket
        S3BucketPrefix: !Ref QSS3KeyPrefix
  SysAdminCleanup:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - WaitCondition
    - UserService
    - AuthService
    - TenantService
    - RegService
    - SysService
    - ProductService
    - OrderService
    - UserServiceCleanup
    - AuthServiceCleanup
    - TenantServiceCleanup
    - RegServiceCleanup
    - SysServiceCleanup
    - ProductServiceCleanup
    - OrderServiceCleanup
    - ZipFilesCleanup
    - BucketRepositoryCleanup
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/rest-request-delete.template
      Parameters:
        Domain: !GetAtt ALB.Outputs.LoadBalancerUrl
        Protocol: http://
        Body: 'null'
        Path: /user/tenants
        Method: DELETE
        S3Bucket: !GetAtt ZipFiles.Outputs.AssetBucket
        S3BucketPrefix: !Ref QSS3KeyPrefix
Outputs:
  AlbUrl:
    Description: The URL endpoint for the product service
    Value: !GetAtt ALB.Outputs.LoadBalancerUrl
  ApiUrl:
    Description: The URL endpoint for the product service
    Value: !GetAtt API.Outputs.RootUrl
  Website:
    Description: The URL endpoint for the product service
    Value: !GetAtt WebClient.Outputs.Website
...
